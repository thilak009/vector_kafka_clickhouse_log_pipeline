version: "3"
services:

  zookeeper:
    image: zookeeper
    ports:
      - 2181:2181

  kafka:
    image: confluentinc/cp-kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CREATE_TOPICS: "docker_logs:1:1"
    healthcheck:
      test: kafka-topics --bootstrap-server 127.0.0.1:9092 --list
      start_period: 10s
      interval: 5s
      timeout: 10s
      retries: 10

  init-kafka:
    image: confluentinc/cp-kafka:latest
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      
      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic docker_logs --replication-factor 1 --partitions 1
      echo -e 'Created kafka topics:'
      kafka-topics --bootstrap-server kafka:9092 --list
      "
    # healthcheck:
    #   test: kafka-topics --bootstrap-server kafka:9092 --topic docker_logs --describe
    #   interval: 2s
    #   timeout: 1s
    #   retries: 10
    # depends_on:
    #   kafka:
    #     condition: service_healthy

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    depends_on:
      - kafka
      - zookeeper
    environment:
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      DYNAMIC_CONFIG_ENABLED: 'true'

  grafana:
    image: grafana/grafana
    ports:
     - 3000:3000

  clickhouse:
    build:
      context: .
      dockerfile: ./clickhouse/Dockerfile
    ports:
      - 8123:8123
      - 9000:9000
    environment:
      - CLICKHOUSE_USER=admin
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1
      - CLICKHOUSE_PASSWORD=admin
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8123/ping || exit 1
      interval: 1s
      timeout: 1s
      retries: 10

  vector:
    image: timberio/vector:0.34.1-alpine
    ports:
      - 8686:8686
    volumes:
      - ./vector.yaml:/etc/vector/vector.yaml:ro
      # https://github.com/vectordotdev/vector/issues/5410#issuecomment-833333984
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      clickhouse:
        condition: service_healthy
      kafka:
        condition: service_healthy

  nginx:
    image: nginx:latest
    ports:
      - 8081:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro